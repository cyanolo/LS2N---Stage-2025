import cobra
from cobra.io import read_sbml_model 
model = read_sbml_model("/home/stagiaire-combi/logiciels/gapseq/C.acetobutylicum/GCF_000008765.1_ASM876v1_anaerobie_m.xml")

from cobra.flux_analysis import flux_variability_analysis
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

#fva against experimental values on the same graph
def plot_fva_vs_mfa(model, reactions, exp_fluxes, names=None, title=None, 
                   biomass=0.07, xscale='log', xlim=(0.001, 100), xticks=None,
                   figsize=(10, 8), **kwargs):
    fva = flux_variability_analysis(model, reaction_list=reactions)
    names = names[::-1] if names else reactions[::-1]
    
    fig, ax = plt.subplots(figsize=figsize)
    ax.set_xscale(xscale)
    
    # Set default ticks only if not provided and scale is log
    if xticks is None and xscale == 'log':
        xticks = [0.001, 0.01, 0.1, 1, 10, 100]
        ax.set_xticks(xticks)
        ax.set_xticklabels(['10⁻³', '10⁻²', '10⁻¹', '10⁰', '10¹', '10²'])
    elif xticks is not None:
        ax.set_xticks(xticks)
    
    ax.set_xlim(*xlim)
    
    # Plotting
    for i, (name, vmin, vmax, exp) in enumerate(zip(names, fva.minimum.values[::-1], fva.maximum.values[::-1], exp_fluxes[::-1])):
        ax.hlines(i, vmin, vmax, color=kwargs.get('fva_color', 'skyblue'), lw=kwargs.get('linewidth', 5), alpha=0.7, label='FVA' if i==0 else "")
        ax.plot([vmin, vmax], [i, i], 'o', color='navy', ms=kwargs.get('markersize', 5))
        ax.scatter(exp, i, color=kwargs.get('exp_color', 'red'), s=100, label='MFA' if i==0 else "")
    
    ax.axvline(xlim[0], color='gray', ls='--', lw=0.5)
    ax.set_yticks(range(len(names)))
    ax.set_yticklabels(names)
    ax.set_xlabel('Flux (mmol/gCDW/h)')
    ax.set_title(title or f'FVA vs MFA | Biomass = {biomass} mmol/gDW/h')
    ax.grid(True, axis='x', ls='--')
    ax.legend()

#fva for the analysis of the model's behavior in solventogenesis
def plot_fva(model, reactions, names=None, **kwargs):
    dummy_values = [np.nan] * len(reactions)
    return plot_fva_vs_mfa(model, reactions, dummy_values, names, **kwargs)

#Constraints to respect paper conditions
model.reactions.EX_cpd11416_c0.lower_bound = 0.07
model.reactions.EX_cpd11416_c0.upper_bound = 0.07
model.reactions.EX_cpd00027_e0	.lower_bound = -10
model.reactions.EX_cpd00027_e0	.upper_bound = -10

#medium reproducing the constraints applied to iCAC802
allowed_exchanges = {
    "EX_cpd00067_e0" : (-10,1000), #proton
    "EX_cpd00013_e0" : (-10,1000), #nh3
    "EX_cpd00009_e0" : (-10,1000), #phosphate
    "EX_cpd00027_e0" : (-10,1000), #glucose
    "EX_cpd00211_e0" : (-10,0), #butyrate
    "EX_cpd00048_e0" : (-10,1000), #sulfate
    "EX_cpd00001_e0" : (-10,1000), #h2o
    "EX_cpd00149_e0" : (-10,1000), #co2
    "EX_cpd00029_e0" : (-10,0), #acetate
    "EX_cpd00528_e0" : (-10,1000), #n2
    #added compared to iCac802
    "EX_cpd00030_e0" : (-1,1000), #mn2
    "EX_cpd00034_e0" : (-1, 1000), #zn2
    "EX_cpd00244_e0" : (-1, 1000), #ni2
    "EX_cpd10516_e0" : (-1,1000), #fe3
    "EX_cpd00971_e0" : (-1,1000), #na+
    "EX_cpd00063_e0" : (-1,1000), #ca2
    "EX_cpd00058_e0" : (-1,1000), #cu2
    "EX_cpd10515_e0" : (-1,1000), #fe2
    "EX_cpd00205_e0" : (-1,1000), #k+
    "EX_cpd00099_e0" : (-1,1000), #chlorure
    "EX_cpd00254_e0" : (-1,1000), #Mg
    "EX_cpd00149_e0" : (-1, 1000) #cobalt
}

for rxn in model.reactions:
    if rxn.id.startswith("EX_"):
        if rxn.id in allowed_exchanges:
            rxn.lower_bound, rxn.upper_bound = allowed_exchanges[rxn.id]
        else:
            rxn.lower_bound = 0.0

#comparison of the paper results to gapseq model capacities
reactions = ["EX_cpd11416_c0", "rxn00285_c0", "rxn00799_c0", "rxn00347_c0", "rxn00505_c0", "rxn00260_c0", "rxn00256_c0", "rxn00173_c0", "rxn00250_c0", "rxn00148_c0", "rxn00459_c0", "rxn00781_c0", "rxn00747_c0", "rxn00786_c0", "rxn00545_c0", "rxn00558_c0", "rxn00216_c0"]
exp_values = [0.07, 0.2, 0.1, 0.1, 0.5, 0.8, 0.5, 12, 0.9, 14, 14, 14, 10, 10, 10, 10, 10] 
names = ["Growth", "SCS", "FH", "ASPA", "IDH", "AST", "CS", "PTA", "PC", "PYK", "ENO", "GAPDH", "TPI", "ALD", "PFK", "GPI", "HK"]
plot_fva_vs_mfa(model, reactions, exp_values, names, title="FVA-Based Prediction (gapseq) vs. Experimental Metabolic Fluxes")
plot_fva_vs_mfa(model, reactions, exp_values, names, title="FVA-Based Prediction (gapseq) vs. Experimental Metabolic Fluxes", xscale='linear', xlim=(-100, 100))
plt.show()

#model behavior in solventogenesis
reactions = ["EX_cpd11640_e0", "EX_cpd00211_e0", "EX_cpd00029_e0", "EX_cpd00363_e0", "EX_cpd03662_e0", "EX_cpd00178_e0"]
names = ["hydrogene", "butyrate", "acetate", "ethanol", "butanol", "acetone"]
plot_fva(model, reactions, names, title="FVA-Based Prediction (gapseq)")
plt.show()
plot_fva(model, reactions, names, title="FVA-Based Prediction (gapseq)", xscale='linear', xlim=(-100, 100))
plt.show()
  
