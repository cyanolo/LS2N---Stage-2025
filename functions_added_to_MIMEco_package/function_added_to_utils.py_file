def plot_specific_metabolite_exchange(model1, sampling, metabolite, model1_id, model2_id, show_plot=False):
    """
    Visualize the exchange of a specific metabolite along the Pareto front, whether it's cross-fed or not.
    
    Parameters
    ----------
    model1 : cobra.Model
        First model in the ecosystem
    sampling : pandas.DataFrame
        Sampling data from Pareto front analysis
    metabolite : str
        Metabolite ID to plot (without compartment suffix)
    model1_id : str
        ID of the first model
    model2_id : str
        ID of the second model
    """
    max_model1 = 0
    max_model2 = 0
    namespace, suffixe = find_namespace(model1)
    
    for i in sampling.index:      
        obj_value_model1 = float(i.split("_", 1)[0])
        obj_value_model2 = float(i.split("_", 1)[1])  
        if obj_value_model1 > max_model1:
            max_model1 = obj_value_model1
            max_ind_model1 = i
        if obj_value_model2 > max_model2:
            max_model2 = obj_value_model2
            max_ind_model2 = i
    
    # Prepare metabolite exchange reactions
    ecosys_reac_id_model1 = "EX_" + metabolite + suffixe + ":" + model1_id
    ecosys_reac_id_model2 = "EX_" + metabolite + suffixe + ":" + model2_id
    
    # Check if reactions exist in sampling data
    if ecosys_reac_id_model1 not in sampling.columns or ecosys_reac_id_model2 not in sampling.columns:
        raise ValueError(f"Metabolite {metabolite} not found in exchange reactions. Check the metabolite ID.")
    
    # Plotting
    a = sampling[ecosys_reac_id_model1]
    b = sampling[ecosys_reac_id_model2]
    plt.plot(a, "#e06666", label = model1_id)
    plt.plot(b, "#3d85c6", label = model2_id)
    plt.axvline(x = max_ind_model1, color = "#e06666", linestyle=':')
    plt.axvline(x = max_ind_model2, color = "#3d85c6", linestyle=':')
    plt.tick_params(
    axis='x',          # changes apply to the x-axis
    which='both',      # both major and minor ticks are affected
    bottom=False,      # ticks along the bottom edge are off
    top=False,         # ticks along the top edge are off
    labelbottom=False) # labels along the bottom edge are off
    plt.title("evolution of "+metabolite+" exchanges on the pareto front")
    if show_plot:
        plt.legend()
        plt.show()
        plt.clf()
    
